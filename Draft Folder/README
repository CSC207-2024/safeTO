## This is the draft folder.
## Please put the modules you designed here, handwritten is fine.

---- Data Access Layer ----

<<interface>> src.DataAccess.InterfaceDataFetcher
fetchData():JSONArray

CrimeDataFetcher implements src.DataAccess.InterfaceDataFetcher
- URL: String
-----------------------
+ fetchData():JSONArray

CrimeDataConverter
- jsonKeys: String
-----------------------
+ jsonToString(JSONArray data): StringBuilder
- appendRow(StringBuilder builder, JSONObject obj): void
+ stringBuilderToTable(StringBuilder builderData): Table

<<interface>> DataProcessor
selectColumns(List<CSVRecord> records, List<String> columns): List<CSVRecord>
filterByYearRange(List<CSVRecord> records, int startYear, int endYear):List<CSVRecord>
filterByCrimeType(List<CSVRecord> records, String crimeType):List<CSVRecord>
filterByNeighbourhood(List<CSVRecord> records, String neighbourhood):List<CSVRecord>

CrimeDataProcessor implements DataProcessor
+ selectColumns(List<CSVRecord> records, List<String> columns): List<CSVRecord>
+ filterByYearRange(List<CSVRecord> records, int startYear, int endYear):List<CSVRecord>
+ filterByCrimeType(List<CSVRecord> records, String crimeType):List<CSVRecord>
+ filterByNeighbourhood(List<CSVRecord> records, String neighbourhood):List<CSVRecord>

<<interface>> DataExporter
exportToCSV(List<TPSEvent> data, String filePath): void

CrimeDataExporter implements DataExporter
+ exportToCSV(List<TPSEvent> data, String filePath): void

CrimeRateCalculator
+ calculateRates(List<TPSEvent> events): Map<String, Double>

